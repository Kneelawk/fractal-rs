{% ifndef GLOBALS_WGSL %}
{% define GLOBALS_WGSL %}

//
// globals.wgsl.liquid - This file contains the global template-ized variables
// used everywhere else.
//

let t_c_real: f32 = {{ opts.c_real }}f;

let t_c_imag: f32 = {{ opts.c_imag }}f;

let t_iterations: u32 = {{ opts.iterations }}u;

let t_mandelbrot: bool = {{ opts.mandelbrot }};

let t_radius_squared: f32 = {{ opts.radius_squared }}f;

let t_sample_count: u32 = {{ opts.multisampling.sample_count }}u;

{% whitespace nl, sp %}
let {% sp %} t_sample_offsets: {% sp %} array<vec2<f32>, {% sp %} t_sample_count>
    {% sp %} = {% sp %} array<vec2<f32>, {% sp %} t_sample_count>(

{% assign sample_index = 0 %}

{% for sample in opts.multisampling.sample_offsets %}
    {% assign mod_index = sample_index | modulo: 4 %}
    {% if mod_index == 0 %}
        {% nl %}{% sp %}{% sp %}{% sp %}{% sp %}
    {% endif %}

    vec2<f32>({{ sample.x }},{% sp %}{{ sample.y }})

    {% assign sample_index = sample_index | plus: 1 %}
    {% if sample_index < opts.multisampling.sample_count %},{% endif %}

    {% if mod_index != 3 %}{% sp %}{% endif %}
{% endfor %}

{% nl %}
);
{% endwhitespace %}

{% endifndef %}
