{% ifndef SCREEN_RECT_VERTEX_SHADER_WGSL %}
{% define SCREEN_RECT_VERTEX_SHADER_WGSL %}

{% include "fragment_data.wgsl.liquid" %}

//
// screen_rect_vertex_shader.wgsl.liquid - This file contains a vertex shader
// that creates a single rect covering the entire screen.
//

[[stage(vertex)]]
fn vert_main([[builtin(vertex_index)]] vert_index: u32) -> FragmentData {
    var indexable: array<vec2<f32>,6u> = array<vec2<f32>,6u>(
        vec2<f32>(1.0, 1.0), vec2<f32>(-1.0, -1.0), vec2<f32>(1.0, -1.0),
        vec2<f32>(1.0, 1.0), vec2<f32>(-1.0, 1.0), vec2<f32>(-1.0, -1.0)
    );

    var data: FragmentData;
    let xy = indexable[vert_index];
    data.position = vec4<f32>(xy, 0.0, 1.0);
    return data;
}

{% endifndef %}
